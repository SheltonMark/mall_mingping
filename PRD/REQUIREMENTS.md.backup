# LEMOPX 订单管理系统 - 需求文档 v1.2

## 📋 项目概述

### 项目背景

LEMOPX 是一家源头工厂，主营日用品（清洁工具，尤其是拖把等）。目前订单采用手写方式，需要将订单流程电子化，为业务员提供便捷的客户下单辅助工具。

### 业务模式

- **B2B 业务员辅助下单系统**（非 B2C 电商）
- 业务员代客户下单（填写客户信息，无需客户登录）
- **❌ 不需要客户登录功能**
- **❌ 不需要在线支付功能**
- **❌ 不需要配送管理模块**
- **❌ 不需要库存管理**（源头工厂，按订单生产）

### 核心目标

1. 简化订单录入流程
2. 数字化管理订单数据
3. 方便客户查询历史订单
4. 便于后台管理商品和订单
5. **与 ERP 系统对接** (品号、产品数据从ERP导入)

### 系统规模

- 并发用户：10-20 人（业务员）
- 客户数量：预计 100-500
- 商品数量：预计 50-200
- 订单量：预计 100-500/月

---

---

## 🔄 ERP对接业务流程 ⭐核心

### 新的产品管理流程

**重要变更**: 品号由ERP系统生成，产品数据通过表格导入

```
1. ERP系统建档
   - 在ERP系统中创建产品档案
   - 生成品号(SKU)
   - 录入产品信息(名称、组件、规格、图片等)
   - ERP维护完整的产品资料库

2. ERP导出产品表格
   - 固定格式的Excel/CSV表格
   - 包含字段:品号、产品名称、规格(含组件颜色信息)、图片URL等
   - 格式后续确认

3. 网站后台导入表格
   - 管理员在后台上传ERP导出的表格
   - 系统自动解析表格数据
   - 产品信息自动导入数据库(品号、组件、颜色等)

4. 后台选择上架产品
   - 管理员根据品号选择需要上架的产品
   - 填写销售单价(上架时填写,不是导入时)
   - 设置产品状态(上架/下架)
   - 可编辑产品描述等非核心信息

5. 前端展示
   - 上架的产品显示在前端
   - 业务员可以浏览和下单
```

### 订单流程

```
1. 业务员下单
   - 选择产品和组件颜色
   - 填写数量、客户信息等
   - 订单字段包含:日期、数量、规格、客户信息等(后续提供格式)

2. 订单确认页 ⭐关键页面
   - 编辑客户信息(联系方式、公司名称等)
   - 编辑产品信息
   - 查看完整订单详情
   - **打印订单**功能(按指定模板格式)

3. 订单管理
   - 所有订单支持编辑
   - 支持导出订单表格(模板后续提供)
   - 订单可打印
```

### 关键变化说明

```
✅ 品号(SKU)由ERP生成 - 网站不生成品号
✅ 产品数据从ERP导入 - 通过表格批量导入
✅ 规格字段包含组件颜色 - 从ERP表格中解析
✅ 上架时填写单价 - 不是创建产品时填写
✅ 订单确认页是核心 - 支持编辑和打印
✅ 订单支持编辑 - 下单后可修改
✅ 订单可导出表格 - 固定模板格式
```

---

## 👥 用户角色

**重要：❌ 系统只有业务员和管理员使用，不需要客户登录功能**

### 1. 业务员（主要用户）⭐

- 浏览商品
- 代客户下单（填写客户信息）
- 查看和编辑订单
- 打印订单
- 导出订单

### 2. 管理员 ⭐

- **导入ERP产品表格**(核心功能)
- 管理商品（选择上架/下架、填写单价）
- 创建和管理业务员账号
- 查看、编辑和导出所有订单
- 打印订单
- 系统配置

---

## 🎯 核心功能模块

## 一、前端用户系统

### 1.1 用户登录 ✅（已有设计）

**页面：** `lemopx_-_login_page/code.html`

**功能点：**

- [X] 账号密码登录
- [X] 记住密码
- [ ] 忘记密码（管理员后台重置）

**注意：**
- ❌ 只有业务员登录，不需要客户登录
- ❌ 不需要角色选择（只有业务员）

**优化建议：**

- 统一主题色和字体

---

### 1.2 首页 ✅（已有设计）

**页面：** `lemopx_homepage/code.html`

**功能点：**

- [X] 品牌展示
- [X] 精选产品展示
- [X] 产品分类导航
- [X] 快速搜索
- [X] 业务员信息展示（已登录状态）

**需要调整：**

- 移除"用户注册"相关入口
- 添加"业务员工作台"入口

---

### 1.3 产品列表页 ✅（已有设计）

**页面：** `lemopx_-_product_listing/code.html`

**功能点：**

- [X] 产品网格展示
- [X] 分类筛选
- [X] 价格筛选
- [X] 颜色筛选
- [X] 材质筛选
- [X] 排序功能
- [X] 批量加入购物车
- [ ] ~~产品库存显示~~（不需要）

**产品卡片显示：**

```
- 产品名称
- 产品图片（主图）
- 总价（不显示组件单价）
- 可选颜色（所有组件的颜色圆圈展示）
- "快速添加"按钮
```

**颜色显示规则：**

```html
<!-- 示例：拖把有3个组件，每个组件有不同颜色 -->
<div class="color-options">
  <div class="component-colors">
    <span class="label">杆:</span>
    <span class="color-circle" style="background: #000000"></span>
    <span class="color-circle" style="background: #FFFFFF"></span>
    <span class="color-circle" style="background: #808080"></span>
  </div>
  <div class="component-colors">
    <span class="label">头:</span>
    <span class="color-circle" style="background: #FFFFFF"></span>
    <span class="color-circle" style="background: #808080"></span>
  </div>
  <div class="component-colors">
    <span class="label">布:</span>
    <span class="color-circle" style="background: #0000FF"></span>
    <span class="color-circle" style="background: #00FF00"></span>
    <span class="color-circle" style="background: #FFC0CB"></span>
  </div>
</div>
```

---

### 1.4 产品详情页 ✅（已有设计）

**页面：** `lemopx_-_product_detail/code.html`

**核心功能：灵活的组件化产品配置 ⭐**

#### 产品结构说明

产品由一个或多个组件组成，每个组件有多种颜色选项。后台可自定义添加组件和颜色。

**示例：完整拖把**

```
拖把 = 拖把杆 + 拖把头 + 抹布

拖把杆：
- 颜色：黑色(#000000)、白色(#FFFFFF)、灰色(#808080)、金色(#FFD700)

拖把头：
- 颜色：白色(#FFFFFF)、灰色(#808080)

抹布：
- 颜色：蓝色(#0000FF)、绿色(#00FF00)、粉色(#FFC0CB)、黄色(#FFFF00)

总价：$39.99（固定价格，不显示组件单价）
```

**示例：单一产品（抹布）**

```
抹布（独立销售）

颜色：蓝色(#0000FF)、绿色(#00FF00)、粉色(#FFC0CB)、黄色(#FFFF00)

总价：$4.99
```

#### 功能需求：

```
1. 组件选择器
   - 展示产品所有组件（后台自定义）
   - 每个组件显示可选颜色（圆圈色块，支持16进制颜色）
   - 用户选择每个组件的颜色

2. 价格显示
   - 只显示商品总价
   - 不显示单个组件价格

3. 数量选择
   - 整体数量选择 [- 1 +]

4. 展示信息
   - 产品名称
   - 产品主图（切换显示选中颜色的图片）
   - 组件及颜色选项
   - 总价
   - 产品描述

5. 操作按钮
   - 加入购物车
   - 立即下单（业务员专用）
```

**页面布局建议：**

```html
产品图片区（左）          配置区（右）
-----------------        -----------------
[主图]                   产品名称：LEMOPX Elite Mop
                         总价：$39.99
[缩略图1][缩略图2]
[缩略图3][缩略图4]       【组件1：拖把杆】
                         颜色：⚫ ⚪ ⚫ 🟡

                         【组件2：拖把头】
                         颜色：⚪ ⚫

                         【组件3：抹布】
                         颜色：🔵 🟢 🌸 🟡

                         数量：[- 1 +]

                         [加入购物车] [立即下单]
```

**需要移除：**

- ❌ 用户评分和评论区（完全移除）
- ❌ "You Might Also Like" 推荐

---

### 1.5 下单页面 ⭐⭐核心页面（简化版）

**功能说明：**

业务员直接填写客户信息和订单信息，无需购物车、结账、配送等复杂流程。

**简化流程：**

```
步骤1：选择产品 + 组件颜色 + 数量
步骤2：填写客户信息（公司名称、联系方式、地址等）
步骤3：订单确认页 ⭐
步骤4：打印/提交订单
```

**下单页功能：**

```
1. 产品信息
   - 已选产品列表
   - 显示组件颜色配置
   - 可修改数量
   - 可删除产品
   - 可继续添加产品

2. 客户信息填写 ⭐
   - 公司名称
   - 联系人
   - 联系方式
   - 收货地址
   - 其他必要字段

3. 订单信息
   - 订单日期（自动）
   - 订单号（提交后生成）
   - 备注信息

4. 价格汇总
   - 商品总额
   - 订单总额

5. 操作按钮 ⭐
   - **预览订单**（进入订单确认页）
   - 保存草稿
   - 清空订单
```

**订单确认页功能（核心）：**

```
1. 完整订单信息展示
   - 客户信息
   - 产品明细（含组件颜色）
   - 价格汇总

2. 可编辑所有信息 ⭐
   - 修改客户信息
   - 修改产品数量
   - 添加/删除产品

3. 核心操作 ⭐
   - **打印订单**（按模板格式）
   - **提交订单**（保存到系统）
   - 返回编辑
```

**需要移除的模块：**

```
❌ 购物车功能 - 直接下单
❌ 结账流程 - 简化为填写客户信息
❌ 配送管理 - 不需要配送模块
❌ 支付功能 - 不需要在线支付
❌ 优惠码 - 不需要
```

---

### 1.6 个人中心/工作台 ⭐

**业务员工作台导航：**

```
- 快速下单
- 我的订单
- 个人信息
```

**我的订单：**

```
- 查看所有下的订单
- 按时间筛选
- 搜索订单号
- 编辑订单
- 打印订单
- 导出订单
- 复制订单（快速重复下单）
```

---

### 1.8 联系页面 ✅（已有设计）

**页面：** `lemopx_-_contact_us/code.html`

**功能点：**

- [X] 联系表单
- [X] FAQ
- [X] 联系方式
- [ ] 表单提交功能
- [ ] 客户支持系统集成

---

### 1.9 关于我们 ✅（已有设计）

**页面：** `lemopx_-_our_story/code.html`

保持现有设计，只需统一样式。

---

## 二、后台管理系统

### 2.1 登录页面

- 管理员登录
- 权限验证

---

### 2.2 仪表盘（Dashboard）

```
数据概览：
- 今日订单数
- 本月订单数
- 待处理订单数
- 库存预警

快捷操作：
- 订单管理
- 商品管理
- 用户管理

图表展示：
- 订单趋势图
- 销售额统计
- 热销产品
```

---

### 2.3 商品管理 ⭐核心功能

#### 2.3.0 从ERP导入产品 ⭐⭐核心中的核心

**导入流程：**

```
1. ERP导出表格
   - 固定格式的Excel/CSV
   - 包含字段（后续提供确切格式）:
     • 品号(SKU) - 由ERP生成
     • 产品名称
     • 规格 - 包含组件颜色信息
     • 图片URL
     • 其他产品属性

2. 后台上传表格
   - 管理员在后台点击"导入产品"
   - 上传ERP导出的Excel/CSV文件
   - 系统自动解析表格

3. 数据解析和导入
   - 自动解析品号、产品名称
   - 解析规格字段，提取组件和颜色信息
   - 导入图片URL
   - 创建产品记录（状态默认为"未上架"）
   - 显示导入结果（成功/失败数量）

4. 导入后处理
   - 产品列表显示导入的产品
   - 管理员选择需要上架的产品
   - 填写销售单价
   - 设置上架状态
```

**表格格式要求（待确认）：**

```
列名示例:
- 品号/SKU
- 产品名称
- 规格 (格式: 杆:黑色/白色;头:白色/灰色;布:蓝色/绿色)
- 主图URL
- 详情图URL (多个用;分隔)
- 分类
- 产品描述

注意：具体格式等待ERP确认后更新
```

---

#### 2.3.1 商品列表

```
功能：
- 搜索商品（名称/品号）
- 筛选（分类/状态：已上架/未上架）
- 批量操作（上架/下架/删除）
- **导入产品（从ERP表格）**⭐核心功能
- 导出商品

显示信息：
- 商品图片
- 商品名称
- 品号(SKU) - 从ERP导入
- 销售单价 (上架时填写)
- 状态（已上架/未上架）
- 操作（编辑单价和描述/上架/下架/删除）

注意：
- 不显示库存信息
- 品号不可编辑（来自ERP）
- 组件配置不可编辑（来自ERP）
```

---

#### 2.3.2 商品上架/编辑 ⭐关键功能

**可编辑信息：**

```
- 销售单价 ⭐必填（上架时填写）
- 产品描述（可优化ERP导入的描述）
- 状态：上架/下架
- 排序权重

不可编辑（来自ERP）：
- 品号(SKU)
- 产品名称
- 组件配置
- 颜色信息
- 图片（来自ERP导入的URL）
```

**操作流程：**

```
1. 选择未上架的产品
2. 填写销售单价（必填）
3. 编辑产品描述（可选）
4. 设置排序权重（可选）
5. 点击"上架"
6. 产品在前端显示
```

**注意事项：**

```
❌ 不再支持手动创建产品 - 产品数据全部从ERP导入
❌ 品号不可编辑 - 由ERP生成
❌ 组件配置不可编辑 - 从ERP导入
✅ 只能编辑销售单价、描述、上架状态
✅ 表格导入失败时，显示详细错误信息
✅ 支持批量上架操作
```

---

**数据结构（JSON格式存储）：**

```json
{
  "productId": "MOP-ELITE-001",
  "name": "LEMOPX Elite Mop 精英拖把套装",
  "sku": "MOP-ELITE-001",
  "category": "拖把系统",
  "description": "精英系列拖把，组合灵活，清洁高效",
  "mainImage": "https://cdn.lemopx.com/products/mop-elite-main.jpg",
  "detailImages": [
    "https://cdn.lemopx.com/products/mop-elite-1.jpg",
    "https://cdn.lemopx.com/products/mop-elite-2.jpg"
  ],
  "price": 39.99,
  "status": "active",
  "components": [
    {
      "componentId": "comp-1",
      "name": "拖把杆",
      "sortOrder": 1,
      "colors": [
        {
          "colorId": "color-1",
          "name": "黑色",
          "hex": "#000000",
          "image": "https://cdn.lemopx.com/components/handle-black.jpg"
        },
        {
          "colorId": "color-2",
          "name": "白色",
          "hex": "#FFFFFF",
          "image": "https://cdn.lemopx.com/components/handle-white.jpg"
        },
        {
          "colorId": "color-3",
          "name": "灰色",
          "hex": "#808080",
          "image": "https://cdn.lemopx.com/components/handle-gray.jpg"
        },
        {
          "colorId": "color-4",
          "name": "金色",
          "hex": "#FFD700",
          "image": "https://cdn.lemopx.com/components/handle-gold.jpg"
        }
      ]
    },
    {
      "componentId": "comp-2",
      "name": "拖把头",
      "sortOrder": 2,
      "colors": [
        {
          "colorId": "color-5",
          "name": "白色",
          "hex": "#FFFFFF",
          "image": "https://cdn.lemopx.com/components/head-white.jpg"
        },
        {
          "colorId": "color-6",
          "name": "灰色",
          "hex": "#808080",
          "image": "https://cdn.lemopx.com/components/head-gray.jpg"
        }
      ]
    },
    {
      "componentId": "comp-3",
      "name": "抹布",
      "sortOrder": 3,
      "colors": [
        {
          "colorId": "color-7",
          "name": "蓝色",
          "hex": "#0000FF",
          "image": "https://cdn.lemopx.com/components/cloth-blue.jpg"
        },
        {
          "colorId": "color-8",
          "name": "绿色",
          "hex": "#00FF00",
          "image": "https://cdn.lemopx.com/components/cloth-green.jpg"
        },
        {
          "colorId": "color-9",
          "name": "粉色",
          "hex": "#FFC0CB",
          "image": "https://cdn.lemopx.com/components/cloth-pink.jpg"
        },
        {
          "colorId": "color-10",
          "name": "黄色",
          "hex": "#FFFF00",
          "image": "https://cdn.lemopx.com/components/cloth-yellow.jpg"
        }
      ]
    }
  ],
  "createdAt": "2024-10-25T10:00:00Z",
  "updatedAt": "2024-10-25T10:00:00Z"
}
```

---

**图片管理：**

```
1. 商品主图（必填）
   - 用于产品列表展示
   - 建议尺寸: 800x800px

2. 详情图（可选，多图）
   - 用于产品详情页展示
   - 支持拖拽排序

3. 组件颜色图（可选）
   - 每个颜色可上传专属图片
   - 用户选择颜色时切换显示
   - 如果未上传，显示主图
```

---

**重要说明：**

```
✅ 灵活性：后台可完全自定义组件和颜色
✅ 简化：只有总价，没有单个组件价格
✅ 兼容性：支持单组件和多组件产品
❌ 不需要：库存管理、规格（如单片/3片装）
❌ 不需要：组件必选/可选的配置
```

---

### 2.4 订单管理 ⭐核心功能

#### 2.4.1 订单列表

```
筛选条件：
- 下单时间范围
- 业务员
- 客户
- 订单号搜索

显示信息：
- 订单号
- 客户名称
- 业务员
- 下单时间
- 订单金额
- 操作（查看/编辑/打印/导出）⭐

批量操作：
- 导出订单表格（Excel/CSV）⭐（模板后续提供）
- 批量打印
- 批量删除

注意：
- 无订单状态管理，业务员下单即完成
- 所有订单支持编辑 ⭐
```

---

#### 2.4.2 订单详情/编辑 ⭐核心功能

```
订单信息（可编辑）：
- 订单号（不可编辑）
- 下单时间（不可编辑）
- 业务员信息（不可编辑）
- 客户信息（可编辑）⭐
  • 公司名称
  • 联系人
  • 联系方式
  • 收货地址

商品明细（可编辑）：⭐
- 商品列表
- 组件配置详情（组件名 + 颜色）
  示例：
  • 拖把杆 - 黑色
  • 拖把头 - 白色
  • 抹布 - 蓝色
- 数量（可修改）
- 单价
- 总价（自动计算）

配送信息（可编辑）：
- 收货人
- 配送地址
- 联系电话
- 配送方式
- 备注信息

价格信息：
- 商品总额
- 配送费用
- 订单总额

操作按钮： ⭐
- **编辑订单** (保存修改)
- **打印订单** (按模板格式)
- **导出订单** (Excel表格 - 按模板格式)
- 删除订单
- ~~推送到ERP~~（暂不需要）
```

**打印和导出模板：**

```
- 打印模板格式（后续提供）
- 导出表格格式（后续提供）
- 包含完整订单字段：
  • 日期
  • 订单号
  • 客户信息
  • 产品明细
  • 规格(组件颜色详情)
  • 数量
  • 单价
  • 总价
  • 其他字段（后续确认）
```

---

### 2.5 用户管理

#### 2.5.1 业务员管理 ⭐

```
功能：
- 添加业务员（管理员专用）
- 编辑业务员信息
- 禁用/启用账号
- 重置密码
- 查看业务员订单统计

信息字段：
- 姓名
- 账号（登录用）
- 手机号
- 邮箱
- 部门
- 状态（启用/禁用）
- 创建时间

重要：只有管理员可以创建业务员账号
```

---

#### 2.5.2 客户管理

```
功能：
- 添加客户（管理员和业务员都可添加）
- 编辑客户信息
- 禁用/启用账号
- 重置密码
- 查看客户订单历史
- 客户分组/标签

信息字段：
- 客户名称/公司名
- 联系人
- 账号
- 手机号
- 邮箱
- 配送地址（可多个）
- 所属业务员
- 客户标签
- 备注
```

---

### 2.6 分类管理

```
功能：
- 添加/编辑/删除分类
- 分类排序
- 分类图标上传

层级：
一级分类：拖把系统、配件、清洁液等
二级分类：平板拖把、旋转拖把、蒸汽拖把等
```

---

### 2.7 系统设置

```
基础设置：
- 网站名称
- Logo
- 联系方式
- 版权信息

首页设置：
- 轮播图管理
- 精选产品配置

配送设置：
- 配送方式管理
- 配送费用配置

ERP对接设置（预留）：
- ERP系统URL
- API密钥配置
- 数据映射规则
- 测试连接

权限管理：
- 角色管理（管理员/业务员/客户）
- 权限分配
```

---

### 2.8 数据导入/导出管理 ⭐核心

**产品导入：**

```
功能说明：
- 从ERP系统导入产品数据
- 通过Excel/CSV表格批量导入
- 表格格式固定（后续提供）

导入流程：
1. 上传表格文件
2. 系统解析数据
3. 验证数据格式
4. 显示导入结果
5. 导入后产品默认为"未上架"状态

数据包含：
- 品号(SKU) - 由ERP生成
- 产品名称
- 规格(组件颜色信息)
- 图片URL
- 产品描述
- 分类
- 其他产品属性
```

**订单导出：**

```
功能说明：
- 导出订单数据为Excel/CSV表格
- 固定模板格式（后续提供）
- 支持批量导出和单个订出

导出内容：
- 日期
- 订单号
- 客户信息(公司名称、联系方式等)
- 产品明细
- 规格详情(组件+颜色)
- 数量
- 单价
- 总价
- 其他订单字段

用途：
- 用于线下管理
- 导入到其他系统
- 数据备份和分析
```

**注意：**

```
❌ 暂不需要订单推送到ERP功能
✅ 只需要产品从ERP导入
✅ 订单导出为表格即可
✅ 表格格式等待确认后更新文档
```

---

## 三、数据库设计（简化版）

### 核心数据表

```sql
1. users (用户表)
   - id (主键)
   - username (账号，唯一)
   - password (密码，加密)
   - role (角色: admin/salesman/customer)
   - name (姓名)
   - phone (手机号)
   - email (邮箱)
   - department (部门，业务员用)
   - salesman_id (客户所属业务员ID，外键)
   - status (状态: active/inactive)
   - created_at (创建时间)
   - updated_at (更新时间)

2. products (商品主表)
   - id (主键)
   - name (商品名称 - 从ERP导入)
   - sku (SKU编码，唯一 - 从ERP导入) ⭐
   - category_id (分类ID，外键)
   - description (商品描述 - 可编辑)
   - main_image (主图URL - 从ERP导入)
   - detail_images (详情图JSON数组 - 从ERP导入)
   - price (销售单价 - 上架时填写) ⭐
   - components (组件配置，JSON格式 - 从ERP导入) ⭐
   - sort_order (排序权重 - 可编辑)
   - status (状态: active/inactive - 上架/未上架)
   - erp_imported (是否从ERP导入，布尔值)
   - erp_import_date (ERP导入时间)
   - created_at
   - updated_at

   components 字段结构示例：
   [
     {
       "id": "comp-1",
       "name": "拖把杆",
       "sortOrder": 1,
       "colors": [
         {
           "id": "color-1",
           "name": "黑色",
           "hex": "#000000",
           "image": "url"
         },
         ...
       ]
     },
     ...
   ]

3. orders (订单表)
   - id (主键)
   - order_no (订单号，唯一)
   - customer_id (客户ID，外键)
   - salesman_id (业务员ID，外键)
   - total_amount (订单总额)
   - shipping_fee (配送费用)
   - shipping_contact (收货人)
   - shipping_phone (联系电话)
   - shipping_address (配送地址)
   - shipping_method (配送方式)
   - notes (备注)
   - erp_sync_status (ERP同步状态，预留)
   - erp_order_id (ERP订单ID，预留)
   - created_at
   - updated_at

4. order_items (订单商品明细表)
   - id (主键)
   - order_id (订单ID，外键)
   - product_id (商品ID，外键)
   - product_name (商品名称，冗余存储)
   - product_sku (商品SKU，冗余存储)
   - selected_config (选择的组件配置，JSON) ⭐
   - quantity (数量)
   - unit_price (单价)
   - subtotal (小计)

   selected_config 示例：
   {
     "components": [
       {
         "name": "拖把杆",
         "color": "黑色",
         "colorHex": "#000000"
       },
       {
         "name": "拖把头",
         "color": "白色",
         "colorHex": "#FFFFFF"
       }
     ]
   }

5. categories (分类表)
   - id (主键)
   - name (分类名称)
   - parent_id (父分类ID，支持二级分类)
   - icon (图标URL)
   - sort_order (排序)
   - created_at

6. addresses (配送地址表，可选)
   - id (主键)
   - user_id (用户ID，外键)
   - contact_name (联系人)
   - phone (电话)
   - address (详细地址)
   - is_default (是否默认)
   - created_at

7. system_settings (系统设置表)
   - id (主键)
   - key (配置键)
   - value (配置值，JSON)
   - description (描述)
   - updated_at

8. banners (轮播图表，可选)
   - id (主键)
   - title (标题)
   - image (图片URL)
   - link (跳转链接)
   - sort_order (排序)
   - status (状态)
   - created_at
```

### 索引建议

```sql
-- 用户表
CREATE INDEX idx_username ON users(username);
CREATE INDEX idx_role ON users(role);
CREATE INDEX idx_salesman_id ON users(salesman_id);

-- 商品表
CREATE INDEX idx_sku ON products(sku);
CREATE INDEX idx_category_id ON products(category_id);
CREATE INDEX idx_status ON products(status);

-- 订单表
CREATE INDEX idx_order_no ON orders(order_no);
CREATE INDEX idx_customer_id ON orders(customer_id);
CREATE INDEX idx_salesman_id ON orders(salesman_id);
CREATE INDEX idx_created_at ON orders(created_at);

-- 订单明细表
CREATE INDEX idx_order_id ON order_items(order_id);
CREATE INDEX idx_product_id ON order_items(product_id);
```

### 重要说明

```
1. 使用JSON字段存储组件配置，提供最大灵活性
2. 不需要库存相关字段
3. 不需要订单状态字段
4. 预留ERP对接相关字段
5. 产品和订单数据适当冗余，避免历史订单受商品修改影响
```

---

## 四、技术选型（快速开发方案）

### 前端

```
- Next.js 14（React框架，支持SSR，性能好）
- TypeScript（类型安全）
- Tailwind CSS（保持现有设计风格，快速开发）
- Zustand（轻量状态管理，简单易用）
- React Query（数据获取和缓存）
- React Hook Form（表单管理）
- Axios（HTTP客户端）
- Ant Design（后台UI组件）
```

### 后端

```
- Next.js API Routes（前后端一体，开发快）
  或 Node.js + Express（传统方案）
- TypeScript
- PostgreSQL（关系型数据库，JSON字段支持好）
- Prisma ORM（类型安全，开发效率高）
- JWT（认证）
- bcrypt（密码加密）
- multer（文件上传）
```

### 文件存储

```
- 本地存储（开发快，适合小规模）
- 或 阿里云 OSS（推荐生产环境）
```

### 部署（简单方案）

```
开发环境：本地运行
生产环境：
  方案1：Vercel（Next.js官方推荐，部署最简单）
  方案2：阿里云 ECS + Docker
  方案3：宝塔面板（适合不懂运维的团队）

数据库：
  - PostgreSQL云数据库（阿里云/腾讯云）
```

### 为什么选择 Next.js？

```
✅ 前后端一体，减少开发工作量
✅ API Routes 无需单独搭后端
✅ TypeScript 原生支持
✅ 部署简单（Vercel一键部署）
✅ 性能优秀（SSR + ISR）
✅ 社区活跃，资料丰富

适合：
- 小团队快速开发
- 10-20并发用户完全够用
- 后续可轻松扩展
```

---

## 五、开发优先级（简化）

### Phase 1：MVP核心功能（2-3周）

```
后台优先开发（业务员用不了前台就没法工作）：
1. 管理员登录
2. 商品管理（添加/编辑商品，组件配置） ⭐核心
3. 分类管理
4. 业务员账号管理
5. 客户账号管理

前台核心功能：
6. 业务员登录
7. 产品列表（展示组件颜色）
8. 产品详情（选择组件颜色） ⭐核心
9. 购物车
10. 下单流程（选择客户+配送信息）
11. 订单提交

数据查看：
12. 后台订单列表和详情
13. 客户登录和订单查询
```

### Phase 2：增强功能（1-2周）

```
1. 业务员工作台（客户管理、订单历史）
2. 订单导出（Excel/PDF）
3. 图片上传优化
4. 批量操作
5. 数据统计（简单报表）
```

### Phase 3：优化功能（按需）

```
1. ERP对接接口开发
2. 系统设置完善
3. 权限细化
4. 性能优化
5. 移动端优化
```

### 开发时间估算（1个全栈开发）

```
Phase 1: 2-3周（MVP，可上线使用）
Phase 2: 1-2周（功能增强）
Phase 3: 按需迭代

总计：3-5周可完成MVP + 基础增强功能
```

---

## 六、非功能需求（简化）

### 性能要求

```
- 页面加载时间 < 3s
- 支持 100+ 商品
- 支持 10000+ 订单
- 图片优化（压缩、懒加载）
- 并发用户：10-20人完全满足
```

### 安全要求

```
- HTTPS 加密
- JWT Token 认证
- 密码加密存储（bcrypt）
- SQL 注入防护（Prisma ORM自动防护）
- XSS 防护
- 文件上传类型限制
```

### 兼容性

```
- 浏览器：Chrome 90+, Firefox 88+, Safari 14+, Edge 90+
- 移动端：基础响应式支持（不强求完美）
```

### 可维护性

```
- 代码注释（关键业务逻辑）
- API 文档（Swagger或简单文档）
- 数据库设计文档
- 部署文档
```

---

## 七、设计优化清单

### 全局优化（必须）

- [X] 统一主题色为 `#BDB76B`
- [X] 统一字体为 `Space Grotesk`
- [ ] 统一导航栏设计
- [ ] 添加全局购物车图标（显示数量）
- [ ] 移除所有"注册"相关入口

### 页面级优化

- [ ] 首页：添加业务员工作台入口
- [ ] 产品列表：显示所有组件颜色（圆圈）
- [ ] 产品详情：重构为组件化配置界面
- [ ] 产品详情：移除评分和评论模块 ⭐
- [ ] 购物车：优化商品显示格式（显示组件详情）
- [ ] 结账页：添加客户选择功能
- [ ] 结账页：移除支付相关内容 ⭐

### 新增页面

- [ ] 个人中心（客户视角）
- [ ] 订单列表页
- [ ] 订单详情页
- [ ] 业务员工作台
- [ ] 后台管理系统（完整）

---

## 八、关键业务流程

### ERP产品导入流程 ⭐新增

```
1. ERP系统建档
   - 在ERP中创建产品
   - 生成品号
   - 录入所有产品信息

2. ERP导出表格
   - 导出为Excel/CSV固定格式
   - 包含品号、名称、规格、图片等

3. 网站后台导入
   - 管理员登录后台
   - 进入商品管理
   - 点击"导入产品"
   - 上传ERP导出的表格
   - 系统自动解析和导入
   - 查看导入结果

4. 产品上架
   - 选择导入的产品
   - 填写销售单价
   - 点击"上架"
   - 产品在前端显示
```

### 业务员下单流程

```
1. 登录系统（业务员账号）
2. 浏览商品 / 搜索商品
3. 进入产品详情页
4. 选择各组件的颜色
5. 选择数量
6. 加入购物车
7. 重复步骤2-6，直到完成商品选择
8. 进入购物车，确认商品
9. 进入结账页
10. 选择客户（下拉选择 或 快速创建）
11. 填写配送信息
12. 进入订单确认页 ⭐
13. 编辑客户信息和产品信息
14. 打印订单（可选）⭐
15. 提交订单
16. 系统生成订单号，完成
```

### 订单管理流程 ⭐新增

```
1. 进入后台订单管理
2. 查看订单列表
3. 点击"编辑"订单
4. 修改客户信息、产品信息、数量等
5. 保存修改
6. 打印订单或导出表格
```

### 客户查询订单流程

```
1. 登录系统（客户账号）
2. 进入个人中心
3. 查看订单列表
4. 点击订单查看详情（包含组件颜色信息）
5. 可下载订单信息（PDF）
```

---

## 九、重要说明和注意事项

### 1. 关于ERP对接 ⭐核心变更

```
✅ 品号由ERP生成 - 网站不生成品号
✅ 产品数据从ERP导入 - 通过表格批量导入
✅ 规格字段包含组件颜色信息 - 从ERP表格解析
✅ 上架时填写单价 - 不是导入时填写
✅ 不支持手动创建产品 - 全部从ERP导入

表格格式：
- 后续提供确切的表格格式
- ERP导出固定格式的Excel/CSV
- 系统自动解析和验证
```

### 2. 关于订单确认和打印 ⭐核心功能

```
✅ 订单确认页是关键页面
✅ 支持编辑客户信息和产品信息
✅ 打印订单功能（按模板格式）
✅ 所有订单支持编辑
✅ 订单可导出表格（按模板格式）

模板格式：
- 打印模板（后续提供）
- 导出表格模板（后续提供）
- 包含所有订单字段
```

### 3. 关于库存

```
✅ 前端：不显示库存信息
✅ 数据库：不需要库存字段
✅ 原因：源头工厂，按订单生产

注意：如果未来需要库存管理，只需：
- 数据库添加 stock 字段
- 前端添加库存显示
- 下单时校验库存
```

### 4. 关于订单状态

```
✅ 简化：业务员下单即完成，无需状态流转
✅ 数据库：不需要 order_status 字段

注意：如果未来需要状态管理（如：待生产、生产中、已发货），可轻松扩展。
```

### 3. 关于组件配置

```
⭐ 核心业务逻辑
✅ 使用 JSON 字段存储，灵活性最高
✅ 后台完全自定义（组件数量、颜色数量）
✅ 支持单组件和多组件产品

示例数据结构已在文档中详细说明。
```

### 4. 关于ERP对接

```
✅ Phase 1 无需实现，先预留字段
✅ 预留字段：erp_sync_status, erp_order_id
✅ 预留接口：/api/erp/push-order

等工厂ERP确定对接方案后再开发。
```

### 5. 关于权限

```
MVP阶段权限简化：
- 管理员：所有权限
- 业务员：前台下单 + 查看客户订单
- 客户：查看自己的订单

后续可细化权限（如：部分业务员可以管理商品）。
```

### 6. 关于图片存储

```
MVP阶段：
- 本地存储即可（快速开发）

生产环境建议：
- 阿里云 OSS（便宜、稳定）
- 图片压缩（tinypng）
- 图片懒加载
```

---

## 十、下一步行动

### 开发前准备

```
1. 确认需求文档（本文档）
2. 搭建开发环境
3. 初始化项目（Next.js + Prisma）
4. 设计数据库Schema
5. 创建数据库表
```

### MVP开发顺序建议

```
第1周：
- 搭建项目框架
- 用户登录系统
- 后台：商品管理（重点：组件配置界面）
- 后台：分类管理

第2周：
- 后台：业务员/客户账号管理
- 前台：产品列表和详情页（重点：组件选择）
- 购物车功能

第3周：
- 下单流程（重点：客户选择）
- 订单管理（后台）
- 订单查询（客户）
- 测试和bug修复
```

---

## 📝 附录

### A. 术语表

```
- SKU: Stock Keeping Unit（库存单位，本系统主要用于产品编码）
- 组件: 产品的组成部分（如：拖把杆、拖把头）
- 颜色: 组件的颜色选项（如：黑色、白色）
- 组合商品: 由多个组件组成的产品
- 单一商品: 只有一个组件的产品
- ERP: Enterprise Resource Planning（企业资源计划系统）
- MVP: Minimum Viable Product（最小可行产品）
```

### B. 参考资料

```
- Next.js 文档: https://nextjs.org/docs
- Prisma 文档: https://www.prisma.io/docs
- Ant Design: https://ant.design/
- Tailwind CSS: https://tailwindcss.com/
```

---

**文档版本：** v1.1（重大修订）
**创建日期：** 2025-10-25
**最后更新：** 2025-10-25
**状态：** 待确认

**主要修改内容：**

1. ✅ 移除库存管理功能
2. ✅ 移除订单状态管理
3. ✅ 移除用户评分/评论功能
4. ✅ 简化商品配置（只有总价，无单价）
5. ✅ 增加16进制颜色上传支持
6. ✅ 增加ERP对接预留方案
7. ✅ 简化数据库设计（使用JSON存储）
8. ✅ 明确只有管理员可创建业务员账号
9. ✅ 调整技术选型为Next.js（快速开发）
10. ✅ 优化开发优先级（2-3周MVP）
